<style lang="less">
/* 以下是页面代码 */

.address-info {
  height: 222rpx;
  position: relative;
  background-color: #fff;
}
.address-info .item {
  padding: 22rpx 16rpx;
  display: flex;
  flex-wrap: wrap;
  font-size: 32rpx;
  line-height: 1.3;
}

.address-info .item .col {
  display: flex;
  align-items: center;
}
.address-info .item .note {
  width: 160rpx;
}
.address-info .item .detail {
  max-width: 480rpx;
}
.address-info .item .address-phone {
  margin-right: 82rpx;
}
.address-info .item .icon-jiantouyou {
  position: absolute;
  right: 0;
}
.address-info .item .icon-jiantouyou:before {
  font-size: 24rpx;
  color: #999;
  line-height: 1;
  width: 15rpx;
  height: 25rpx;
}
.address-border {
  width: 100%;
  height: 15rpx;
}

.cart-list {
  background-color: #fff;
}
.shop-head {
  height: 88rpx;
  display: flex;
  align-items: center;
  border-bottom: 1rpx solid #ddd;
  position: relative;
  padding: 0 88rpx;
  // 屏蔽店铺全选后，把左内边距减少
  padding-left: 30rpx;
}
.shop-head-info {
  display: flex;
  font-size: 32rpx;
  align-items: center;
}
.shop-head-info .shop-name {
  margin-left: 10rpx;
}
.icon-xuanze,
.icon-xuanze-fill {
  position: absolute;
  left: 0;
}
.icon-xuanze:before,
.icon-xuanze-fill:before {
  width: 32rpx;
  height: 32rpx;
}
.icon-xuanze {
  color: #ccc;
}
.icon-xuanze-fill {
  color: #ff2d4a;
}
.icon-dianpu {
  color: #999;
}

.shop-head .icon-bianji {
  position: absolute;
  right: 0;
}

.shop-head .icon-bianji:before {
  width: 32rpx;
  height: 32rpx;
  color: #999;
}

.product-item {
  display: flex;
  padding: 30rpx 20rpx 30rpx 0;
  margin-left: 20rpx;
  border-top: 1rpx solid #ddd;
  margin-top: -1rpx;
  align-items: center;
  position: relative;
}

.product-left {
  width: 200rpx;
  height: 200rpx;
  background-color: #eee;
  margin-right: 26rpx;
}
.product-left .product-img {
  width: 200rpx;
  height: 200rpx;
}
.product-right {
  width: 480rpx;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
}
.product-name {
  height: 84rpx;
  font-size: 30rpx;
  line-height: 1.4;
  /* 多行文字隐藏省略号 */
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.product-price {
  color: #ff2d4a;
}
.product-price-symbol,
.product-price-decimal {
  font-size: 28rpx;
}
.product-price-integer {
  font-size: 44rpx;
}

.cart-list .product-item {
  display: flex;
  padding: 20rpx 16rpx 20rpx 0;
  border-top: 1rpx solid #ddd;
  margin-top: -1rpx;
  margin-left: 88rpx;
}

.product-left {
  margin-right: 20rpx;
}

.product-left,
.product-left .product-img {
  width: 160rpx;
  height: 160rpx;
}
.product-right {
  width: 464rpx;
}
.product-price-symbol,
.product-price-decimal {
  font-size: 24rpx;
}
.product-price-integer {
  font-size: 34rpx;
}

.product-item .icon-xuanze,
.product-item .icon-xuanze-fill {
  left: -88rpx;
}

.product-detail {
  font-size: 24rpx;
  line-height: 1.25;
  color: #999;
  margin: 20rpx 0 30rpx;
}
.product-count {
  position: absolute;
  right: 0;
  bottom: 0;
  letter-spacing: 2rpx;
}

.fixed-bar {
  width: 750rpx;
  height: 98rpx;
  padding: 18rpx 250rpx 18rpx 88rpx;
  box-sizing: border-box;
  background-color: #fff;
  position: fixed;
  bottom: 0;
  z-index: 11;
  display: flex;
  align-items: center;
  justify-content: space-between;
  .icon-xuanze {
    padding-right: 60rpx;
  }
}
.buy-button {
  width: 230rpx;
  height: 98rpx;
  line-height: 98rpx;
  font-size: 30rpx;
  background-color: #ff2d4a;
  color: #fff;
  position: absolute;
  right: 0;
  text-align: center;
}

.select-all {
  font-size: 30rpx;
}
.total-body {
  display: flex;
  align-items: baseline;
  font-size: 30rpx;
}
.total-foot {
  margin-top: 10rpx;
  color: #999;
}
.cart-empty {
  flex-direction: column;
  padding: 100rpx 0;
  &-img {
    width: 180rpx;
    height: 180rpx;
    margin-bottom: 50rpx;
  }
  &-txt {
    font-size: 28rpx;
  }
  .login-btn {
    margin-top: 30rpx;
    border: 1rpx solid #ff2d4a;
    color: #ff2d4a;
    height: 60rpx;
    line-height: 60rpx;
    font-size: 24rpx;
  }
}
.product-count-edit {
  display: flex;
  position: absolute;
  right: 0;
  bottom: 0;
  .count-min,
  .count-add {
    width: 60rpx;
    height: 50rpx;
    box-sizing: border-box;
    border: 4rpx solid #666;
    line-height: 50rpx;
    font-size: 28rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    &.disabled {
      border-color: #ccc;
      color: #ccc;
    }
  }
  .count-min {
    border-radius: 5rpx 0 0 5rpx;
  }
  .count-add {
    border-radius: 0 5rpx 5rpx 0;
  }
  .count-number {
    height: 50rpx;
    line-height: 50rpx;
    width: 80rpx;
    text-align: center;
  }
}
.iconfont-tap {
  font-family: 'iconfont' !important;
  font-size: 32rpx;
  font-style: normal;
  -webkit-font-smoothing: antialiased;

  min-width: 88rpx;
  min-height: 88rpx;
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>

<template lang="wxml" minapp="native">
  <view class="divider"></view>
  <view class="cart-list">
    <view class="shop-head">
      <view class="shop-head-info">
        <view class="iconfont icon-shop flex-center icon-dianpu"></view>
        <text class="shop-name">优购生活馆</text>
      </view>
    </view>
    <block wx:for="{{cartDataArr}}" wx:key="index">
      <view class="product-item">
        <view @tap="switchSelectStatus({{index}})"  class="iconfont-tap icon-xuanze {{ item.selectStatus ? 'icon-xuanze-fill' : '' }}"></view>
        <navigator url="/pages/goods_detail?goods_id={{ item.goods_id }}" class="product-left">
          <image class="product-img" src="{{ item.goods_small_logo }}" />
        </navigator>
        <view class="product-right">
          <navigator url="/pages/goods_detail?goods_id={{ item.goods_id }}" class="product-name">
            {{ item.goods_name }}
          </navigator>
          <view class="product-detail">
            <!-- 商品简介 -->
          </view>
          <view class="product-price">
            <text class="product-price-symbol">￥</text>
            <text class="product-price-integer">{{item.goods_price}}</text>
            <text class="product-price-decimal">.00</text>
          </view>
          <view class="product-count-edit">
            <view class="count-min" @tap="countNumberTapFunc({{index}},{{-1}})">-</view>
            <input class="count-number" @input="countNumberFunc({{index}})" type="number" value="{{ item.goods_number }}" />
            <view class="count-add" @tap="countNumberTapFunc({{index}},{{1}})">+</view>
          </view>
        </view>
      </view>
    </block>
  </view>
  <view class="bottom-space"></view>
  <view class="fixed-bar">
    <view @tap="selectAllHandle({{ selectStatusCount == cartDataArr.length }})" class="iconfont-tap icon-xuanze {{ selectStatusCount == cartDataArr.length ? 'icon-xuanze-fill':'' }}"></view>
    <text class="select-all">全选</text>
    <view class="total">
      <view class="total">
        <view class="total-body">
          <view class="total-note">合计：</view>
          <view class="product-price">
            <text class="product-price-symbol">￥</text>
            <text class="product-price-integer">100</text>
            <text class="product-price-decimal">.00</text>
          </view>
        </view>
        <view class="total-foot">包含运费</view>
      </view>
    </view>
    <navigator url="" class="buy-button">
      结算(100)
    </navigator>
  </view>
  </block>
  <block>
    <text>购物车为空</text>
    <navigator url="" open-type="switchTab" >返回首页逛一下</navigator>
  </block>
  <!-- </view> -->
</template>

<script>
import wepy from 'wepy';

export default class Cart extends wepy.page {
  config = {
    navigationBarTitleText: '购物车'
  };

  data = {
    cartDataArr: [],   // 商品的数据
    selectStatusCount: 0,  // 被选中的商品数量 
    totalPrice: 0
  };

  computed = {
    cartDataArr() {
      // 重置数据
      this.selectStatusCount = 0;   // 累加
      this.totalPrice = 0;          // 重置总金额

      // cartDataArr 发生变化，对 cartDataArr 更新
      this.cartDataArr.forEach(item => {
        // 遍历后查看当前商品是否被选中
        if(item.selectStatus === true) {
          this.selectStatusCount++
          this.totalPrice += item.goods_number * item.goods_price
        }
      })

      // 返回值变化后的商品数据
      return this.cartDataArr
    }
  }

  methods = {
    // 加减商品的数量
    countNumberTapFunc(index, addSubtraction) {
      // 根据索引查找到商品，修改价格
      this.cartDataArr[index].goods_number += addSubtraction;

      if (this.cartDataArr[index].goods_number <= 1) {
        wepy
          .showModal({
            content: '是否要删除该商品', //提示的内容,
            showCancel: true, //是否显示取消按钮,
            cancelText: '取消', //取消按钮的文字，默认为取消，最多 4 个字符,
            confirmText: '确定', //确定按钮的文字，默认为取消，最多 4 个字符,
            confirmColor: '#3CC51F' //确定按钮的文字颜色,
          })
          .then(res => {
            // 用户点击了确定
            if (res.confirm) {
              this.cartDataArr.splice(index, 1);
            }
            // 用户点击了取消
            else if (res.cancel) {
              this.cartDataArr[index].goods_number = 1;
            }
            // 异步回调中修改，需要调用 this.$apply();
            this.$apply();
          });
      }
    },

    // 商品数量输入框的事件
    countNumberFunc(index, event) {
      // 获取输入框的值
      let inputNumber = parseInt(event.detail.value)

      // 把商品数量旧值保存起来
      let oldInputNumber = this.cartDataArr[index].goods_number

      // 对输入的数值进行判断
      // 若不合法返回旧值， 合法则返回输入的值
      if(inputNumber < 1 || isNaN(inputNumber)) {
        return oldInputNumber
      }else {
        this.cartDataArr[index].goods_number = inputNumber;
      }
    },

    // 单选切换状态
    switchSelectStatus(index) {
      this.cartDataArr[index].selectStatus = !this.cartDataArr[index].selectStatus
    },

    // 全选事件
    selectAllHandle(selectAllStatus) {

      console.log("===============");
      

      this.cartDataArr.forEach(item => {
        item.selectStatus = !selectAllStatus
      })
    }
  };

  onLoad() {
    console.log('onLoad');
  }

  onShow() {
    // 本地数据取出并赋值
    this.cartDataArr = wepy.getStorageSync('cartDataArr');
  }
}
</script>
