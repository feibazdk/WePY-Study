<style lang="less">
// 2.0 这里写样式
page {
  background-color: #fff;
}
.divider {
  background-color: #f4f4f4;
}
.address {
  &-info {
    height: 222rpx;
    padding-bottom: 15rpx;
    box-sizing: border-box;
    position: relative;
    background-color: #fff;
    display: flex;
    flex-direction: column;
    align-content: center;
    justify-content: center;
    .item {
      padding: 22rpx 16rpx;
      display: flex;
      flex-wrap: wrap;
      font-size: 32rpx;
      line-height: 1.3;
      .col {
        display: flex;
        align-items: center;
      }
      .note {
        width: 160rpx;
      }
      .detail {
        max-width: 480rpx;
      }
      .address-phone {
        margin-right: 82rpx;
      }
      .icon-jiantouyou {
        position: absolute;
        right: 0;
      }
      .icon-jiantouyou:before {
        font-size: 24rpx;
        color: #999;
        line-height: 1;
        width: 15rpx;
        height: 25rpx;
      }
    }
  }
  &-border {
    width: 750rpx;
    height: 15rpx;
    position: absolute;
    bottom: 0;
    left: 0;
  }
  &-add {
    height: 222rpx;
    &-btn {
      width: 360rpx;
      height: 80rpx;
      background-color: #f4f4f4;
      border-radius: 5rpx;
      color: #ccc;
      font-size: 32rpx;
      display: flex;
      justify-content: center;
      align-items: center;
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }
}

.product {
  &-item {
    display: flex;
    padding: 30rpx 20rpx;
    position: relative;
    &::after {
      content: '';
      position: absolute;
      left: 20rpx;
      right: 0;
      bottom: 0;
      border-bottom: 1rpx solid #ddd;
    }
  }
  &-left {
    margin-right: 26rpx;
    &,
    .product-img {
      width: 200rpx;
      height: 200rpx;
      background-color: #eee;
    }
  }
  &-right {
    width: 480rpx;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative;
  }
  &-name {
    height: 84rpx;
    font-size: 30rpx;
    line-height: 1.4;
    /* 多行文字隐藏省略号 */
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  &-price {
    color: #ff2d4a;
    &-symbol,
    &-decimal {
      font-size: 28rpx;
    }
    &-integer {
      font-size: 44rpx;
    }
  }
  &-count {
    position: absolute;
    right: 0;
    bottom: 0;
    letter-spacing: 2rpx;
    color: #999;
  }
}

.order {
  &-list {
    background-color: #fff;
  }
  &-total-item {
    height: 60rpx;
    background-color: #fff;
    padding: 0 20rpx;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
    &-right {
      color: #ff2d4a;
    }
  }
  &-cell {
    height: 88rpx;
    background-color: #fff;
    padding: 0 20rpx;
    display: flex;
    align-items: center;
    position: relative;
    justify-content: space-between;
    &::after {
      content: '';
      position: absolute;
      border-top: 1rpx solid #ddd;
      left: 20rpx;
      right: 20rpx;
      top: -1rpx;
    }
    .btn-line {
      border: 2rpx solid #999;
      border-radius: 5rpx;
      width: 156rpx;
      height: 56rpx;
      display: flex;
      justify-content: center;
      align-items: center;
      margin-left: 40rpx;
    }
    .btn-color-main {
      color: #ff2d4a;
    }
  }
  &-pay {
    background-color: #fff;
    padding: 20rpx 20rpx 60rpx;
    font-size: 30rpx;
    text-align: right;
    &-head {
      margin-bottom: 20rpx;
    }
    &-total {
      color: #ff2d4a;
    }
    &-btn,
    .login-btn {
      background-color: #00c000;
      display: flex;
      height: 80rpx;
      justify-content: center;
      align-items: center;
      color: #fff;
      font-size: 30rpx;
      border-radius: 5rpx;
      margin-bottom: 20rpx;
      &.disabled {
        background-color: #ddd;
      }
    }
  }
}
</style>
<template lang="wxml" minapp="native">
  <Address :userAddress="addressPage">
    <view class="address-info">
      <!-- 9.0.1 收货地址数据渲染 -->
      <block wx:if="{{ addressPage }}">
        <view class="item space-between">
          <view class="col">
            <text class="note">收货人：</text>
            <text class="detail">{{ addressPage.userName }}</text>
          </view>
          <view class="col">
            <text class="address-phone">{{ addressPage.telNumber }}</text>
            <text class="iconfont-tap icon-jiantouyou"></text>
          </view>
        </view>
        <view class="item">
          <text class="note">收货地址：</text>
          <text class="detail">{{ addressPage.userAddressMerge }}</text>
        </view>
      </block>
      <block wx:else>
        <view class="address-add-btn">+ 新增地址</view>
      </block>
      <image class="address-border" src="/images/cart_border@2x.png" alt="" />
    </view>
  </Address>
  <view class="divider"></view>

  <view class="order-list">
    <block wx:for="{{ cartDataArr }}" wx:key="index" wx:if="{{ item.selectStatus }}">
      <view class="product-item">
        <!-- 10.0.3 渲染商品logo，名字，价格，数量，跳转详情页url链接 -->
        <navigator url="/pages/goods_detail?goods_id={{ item.goods_id }}" class="product-left">
          <image class="product-img image-holder" src="{{ item.goods_small_logo }}" />
        </navigator>
        <view class="product-right">
          <navigator url="/pages/goods_detail?goods_id={{ item.goods_id }}" class="product-name">
            {{ item.goods_name }}
          </navigator>
          <view class="product-price">
            <text class="product-price-symbol">￥</text>
            <text class="product-price-integer">{{ item.goods_price }}</text>
            <text class="product-price-decimal">.00</text>
          </view>
          <view class="product-count">x{{ item.goods_number }}</view>
        </view>
      </view>
    </block>
    <view class="order-cell">
      项目测试使用，支付成功后我们不会为您发货
    </view>
  </view>

  <view class="divider"></view>
  <view class="order-total">
    <view class="order-total-item">
      <view class="order-total-item-left">商品金额</view>
      <view class="order-total-item-right">￥{{totalPrice}}</view>
    </view>
    <view class="order-total-item">
      <view class="order-total-item-left">运费</view>
      <view class="order-total-item-right">+￥0.00</view>
    </view>
  </view>

  <view class="order-pay">
    <view class="order-pay-head">实付金额：<text class="order-pay-total">￥0.01</text></view>
    <block>
      <button open-type="getUserInfo" @getuserinfo="getUserInfoHandle">点击登录后下单</button>
    </block>
    <block>
      <view class="order-pay-btn">微信支付</view>
    </block>
  </view>
</template>

<script>
import wepy from 'wepy';
import Address from '../component/address';
import { postUsersWxLogin } from '../api/api';

export default class cartOrder extends wepy.page {
  config = {
    navigationBarTitleText: '订单结算页'
  };

  data = {
    addressPage: null,
    cartDataArr: [],
    totalPrice: 0
  }

  computed = {
    totalPrice() {
      let _totalPrice = 0
      this.cartDataArr.forEach(item => {
        if (item.selectStatus === true) {
          _totalPrice += item.goods_number * item.goods_price
        }
      })
      return _totalPrice
    }
  }

  methods = {
    getUserInfoHandle(event) {
      // console.log(event.detail)
      // 为了实现多页面数据共享，我们把用户登录信息，保存到本地存储中
      wepy.setStorageSync('userInfo', event.detail.userInfo)

      wepy.login().then(res => {
        console.log(res)
        let options = {
          encryptedData: event.detail.encryptedData,
          iv: event.detail.iv,
          rawData: event.detail.rawData,
          signature: event.detail.signature,
          code: res.code
        }
        console.log(options)

        this.doWxLogin(options)
      })
    }
  }
  doWxLogin(options) {
    postUsersWxLogin({
        method: 'POST',
        data: options
      })
      .then(res => {
        console.log(res)
        // 11.0.7 判断如果状态码返回 200 ，说明请求成功
        if (res.meta.status === 200) {
          console.log('获取 token 成功')
          // 11.0.8 把 token 保存到本地存储
          wepy.setStorageSync('token', res.data.token)
          // 11.0.9.2 把 token 添加到 data 中，用于切换显示登录按钮还是下单按钮
          this.token = res.data.token
          // 11.0.10 触发数据和视图更新
          this.$apply()
        }
      })
  }

  components = {
    Address
  };

  onLoad() {
    console.log('onLoad');
  }

  onShow() {
    this.cartDataArr = wepy.getStorageSync('cartDataArr')
  }
}
</script>
